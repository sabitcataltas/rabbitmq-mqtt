package com.sabit.rabbitmqmqtt;

import org.springframework.amqp.core.Message;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.stereotype.Service;

import io.micrometer.common.util.StringUtils;

@Service
public class RabbitMQListenerService {

	private LogicService logicService;

	public RabbitMQListenerService(LogicService logicService) {
		this.logicService = logicService;
	}

	@RabbitListener(queues = RabbitMQConfig.QUEUE)
	public void listenMessage(String messageStr, Message message) {
		String topic = message.getMessageProperties().getReceivedRoutingKey();
		String clientId = topic.substring(topic.lastIndexOf(".") + 1);

		System.out.println("Message : " + messageStr);
		System.out.println("Topic : " + message.getMessageProperties());
		System.out.println("clientId : " + clientId);

		if (StringUtils.isEmpty(messageStr))
			return;

		System.out.println("Channel : " + topic);
		if (Double.valueOf(messageStr).compareTo(80.0) > 0) {
			logicService.deviceOverloaded(messageStr);
		}
	}
}